lower <- (i-1) * Samp + 1
upper <- i * Samp
xbar[i] <- mean(simVector[lower:upper])
}
stdDev <- sd(xbar)
xdbar <- mean(xbar)
xbar
numSim/Samp
Samp <- 25
noSamp <- numSim/Samp
xbar <- rep(NA, times = numSim/noSamp)
for (i in 1:noSamp) {
lower <- (i-1) * Samp + 1
upper <- i * Samp
xbar[i] <- mean(simVector[lower:upper])
}
stdDev <- sd(xbar)
xdbar <- mean(xbar)
lower <- xdbar - stdDev * qt((1 - Prob)/2, noSamp - 1, lower.tail = FALSE)/sqrt(noSamp)
upper <- xdbar + stdDev * qt((1 - Prob)/2, noSamp - 1,  lower.tail = FALSE)/sqrt(noSamp)
c(lower, upper)
a <- c(rpois(24, 5))
b <- c(rpois(24, 5))
c <- c(rpois(24, 5))
library("xlsx", lib.loc="~/R/win-library/3.5")
df <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Boxplot values.xlsx", sheetIndex = 1)
View(df)
72*3
72*4
View(df)
boxplot(CI ~ Diff, data = df)
library("ggplot2", lib.loc="~/R/win-library/3.5")
View(df)
ggplot(data = df, aes(CI, Diff)) + geom_boxplot()
ggplot(data = df, aes(x = CI, y = Diff)) + geom_boxplot()
ggplot(df, aes(x = CI, y = Diff)) + geom_boxplot()
View(df)
ggplot(df, aes(group = CI, y = Diff)) + geom_boxplot()
df <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Boxplot values.xlsx", sheetIndex = 1)
ggplot(df, aes(x = CI, y = Diff)) + geom_boxplot()
df <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Boxplot values.xlsx", sheetIndex = 1)
library(stringi)
df <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Boxplot values.xlsx", sheetIndex = 1)
summary(df)
for (i in 1:288){
df$CI[i] <- toString(df$CI[i])
}
summary(df)
ggplot(df, aes(x = CI, y = Diff)) + geom_boxplot()
df <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Boxplot values.xlsx", sheetIndex = 1)
for (i in 1:288){
df$CI[i] <- c(toString(df$CI[i]), "%")
}
df <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Boxplot values.xlsx", sheetIndex = 1)
for (i in 1:288){
df$CI[i] <- paste(toString(df$CI[i]), "%")
}
ggplot(df, aes(x = CI, y = Diff)) + geom_boxplot() + labs(title = "Deviation from mean", x = "Lev")
ggplot(df, aes(x = CI, y = Diff)) + geom_boxplot() + labs(title = "Deviation from mean", x = "Confidence Level", y = "Absolute deviation from mean")
ggplot(df, aes(x = CI, y = Diff)) + geom_boxplot() + labs(title = "Deviation from mean", x = "Confidence Level", y = "Absolute deviation from mean") + theme_classic()
ggplot(df, aes(x = CI, y = Diff, color = CI)) + geom_boxplot() + labs(title = "Deviation from mean", x = "Confidence Level", y = "Absolute deviation from mean") + theme_classic()
shiny::runApp('R/R Playground/Playground/Dashboard/draftOnePM')
shiny::runApp('R/R Playground/Playground/Dashboard/draftOnePM')
library(shiny)
?fileInput
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
qnorm(0.1)
tblSites <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/4. Project Mind/Data/Site Details.xlsx", sheetIndex = 1, colIndex = 1:4)
library(dplyr)
library(ggplot2)
library(plotly)
library(xlsx)
library(lubridate)
library(leaflet)
library(RColorBrewer)
library(rhandsontable)
tblSites <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/4. Project Mind/Data/Site Details.xlsx", sheetIndex = 1, colIndex = 1:4)
batchData <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/4. Project Mind/Data/dataMIND.xlsx", sheetIndex = 1) #!!! This will be replaced by the csv input
batchData <- select(batchData, BaseT_Site, BaseT_Date)
batchData$BaseT_Date <-  as.Date(batchData$BaseT_Date, format = "%d-%m-%Y")
siteDetails <- tblSites[,1:2]
batchData <- inner_join(batchData, siteDetails, by = "BaseT_Site")
batchData <- select(batchData, BaseT_Site, Location, BaseT_Date)
colnames(batchData) <- c("BaseT_Site", "Location", "Date")
myData <- batchData
myData <- batchData %>% group_by(BaseT_Site) %>% summarise(Total = n(), MinDate = min(Date), MaxDate = max(Date), Differ = max(Date) - min(Date))
View(myData)
myData <- batchData %>% group_by(BaseT_Site) %>% summarise(Total = n(), MinDate = min(Date), MaxDate = max(Date), Differ = (max(Date) - min(Date))/7)
write.xlsx(myData, "C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/22Oct.xlsx", row.names = FALSE)
write.csv(myData, "C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/22Oct.csv", row.names = FALSE)
batchData <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/4. Project Mind/Data/Trial_MIND_Baseline_20180914_cumulative_Ruan.xlsx", sheetIndex = 1) #!!! This will be replaced by the csv input
yy <- batchData %>% group_by(BaseT_Site) %>% summarise(Total = n(), MinDate = min(Date), MaxDate = max(Date), Differ = (max(Date) - min(Date))/7)
batchData <- select(batchData, BaseT_Site, BaseT_Date)
batchData$BaseT_Date <-  as.Date(batchData$BaseT_Date, format = "%d-%m-%Y")
batchData <- select(batchData, BaseT_Site, Location, BaseT_Date)
batchData <- inner_join(batchData, siteDetails, by = "BaseT_Site")
batchData <- select(batchData, BaseT_Site, Location, BaseT_Date)
colnames(batchData) <- c("BaseT_Site", "Location", "Date")
yy <- batchData %>% group_by(BaseT_Site) %>% summarise(Total = n(), MinDate = min(Date), MaxDate = max(Date), Differ = (max(Date) - min(Date))/7)
write.csv(yy, "C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/22OctB.csv", row.names = FALSE)
param <- data.frame(recruitRate = 1.12, RecruitGoal = 56)
numSim <- 1000 #Number of simulations to run
Samp <- 10
runSimulation <- function(param) {
durVector <- rep(NA, times = numSim)
for (i in 1:numSim) {
sim <- rpois(10000, param$recruitRate)
sim <- cumsum(sim)
durVector[i] <- which.max(sim >= param$RecruitGoal)
}
durVector
}
calc_CI <- function(simVector, Prob) {
noSamp <- numSim/Samp
xbar <- rep(NA, times = numSim/noSamp)
for (i in 1:noSamp) {
lower <- (i-1) * Samp + 1
upper <- i * Samp
xbar[i] <- mean(simVector[lower:upper])
}
stdDev <- sd(xbar)
xdbar <- mean(xbar)
lower <- xdbar - stdDev * qt((1 - Prob)/2, noSamp - 1, lower.tail = FALSE)/sqrt(noSamp)
upper <- xdbar + stdDev * qt((1 - Prob)/2, noSamp - 1,  lower.tail = FALSE)/sqrt(noSamp)
c(lower, upper)
}
calc_CI(runSimulation(param), 0.9)
a <- calc_CI(runSimulation(param), 0.9)
a[2]-a[1]
a <- calc_CI(runSimulation(param), 0.9)
a
a
a <- calc_CI(runSimulation(param), 0.9)
a
a
a <- calc_CI(runSimulation(param), 0.9)
a
a <- calc_CI(runSimulation(param), 0.9)
a
a-1
1.12*-1
baseParam <- 1.5
simParam <- data.frame(RecruitGoal = 60, recruitRate = baseParam)
aa <- runSimulation(simParam)
calc_CI(aa, 0.9)
simVector <- aa
noSamp <- numSim/Samp
xbar <- rep(NA, times = numSim/noSamp)
xbar <- rep(NA, times = noSamp)
for (i in 1:noSamp) {
lower <- (i-1) * Samp + 1
upper <- i * Samp
xbar[i] <- mean(simVector[lower:upper])
}
stdDev <- sd(xbar)
xdbar <- mean(xbar)
lower <- xdbar - stdDev * qt((1 - Prob)/2, noSamp - 1, lower.tail = FALSE)/sqrt(noSamp)
upper <- xdbar + stdDev * qt((1 - Prob)/2, noSamp - 1,  lower.tail = FALSE)/sqrt(noSamp)
c(lower, upper)
calc_X <- function(simVector, Prob) {
noSamp <- numSim/Samp
xbar <- rep(NA, times = noSamp)
for (i in 1:noSamp) {
lower <- (i-1) * Samp + 1
upper <- i * Samp
xbar[i] <- mean(simVector[lower:upper])
}
mean(xbar)
}
calc_X(simVector)
rangeVec <- -100:100
rangeVec <- rep(NA, 201)
i <- 10
simParam$recruitRate <- baseParam + baseParam*i/100
View(analysis)
View(simParam)
rangeDF <- data.frame(Rate = -100:100, Diff = rep(NA, 201))
View(rangeDF)
calc_X <- function(simVector) {
noSamp <- numSim/Samp
xbar <- rep(NA, times = noSamp)
for (i in 1:noSamp) {
lower <- (i-1) * Samp + 1
upper <- i * Samp
xbar[i] <- mean(simVector[lower:upper])
}
mean(xbar)
}
rangeDF$Diff[i+101] <- calc_X(runSimulation(simParam))
baseParam <- 1.5
simParam <- data.frame(RecruitGoal = 60, recruitRate = baseParam)
rangeDF <- data.frame(Rate = -100:100, Diff = rep(NA, 201))
for (i in -100:100){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+101] <- calc_X(runSimulation(simParam))
}
ggplot(rangeDF)
plot(rangeDF$Rate, rangeDF$Diff)
rangeDF$Rate[100]
x <- ((rangeDF$Diff[101] - rangeDF$Diff)
x <- ((rangeDF$Diff[101] - rangeDF$Diff))
x <- ((rangeDF$Diff[101] - rangeDF$Diff))
x
plot(x)
baseParam <- 1.5
simParam <- data.frame(RecruitGoal = 60, recruitRate = baseParam)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -100:100){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+101] <- calc_X(runSimulation(simParam))
}
length(-90:90)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -90:90){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+91] <- calc_X(runSimulation(simParam))
}
plot(rangeDF$Rate, rangeDF$Diff)
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
plot(x)
plot(-90:90,x)
baseParam <- 5
simParam <- data.frame(RecruitGoal = 500, recruitRate = baseParam)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -90:90){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+91] <- calc_X(runSimulation(simParam))
}
plot(rangeDF$Rate, rangeDF$Diff)
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
plot(-90:90,x)
simParam <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Param.xlsx", sheetIndex = 1)
View(siteParam)
View(simParam)
yy[25,1] <- 3
View(yy)
View(batchData)
analyse <- data.frame(BaseT_Site = NA, xBar = NA, Diff = NA)
simParam[1,]
i <- 1
xxx <- calc_X(runSimulation(simParam[i,]))
i <- 1
(100*(i-1)+1+i
(100*(i-1))+1+i
(100*(i-1))+1+i
(100*(i-1))+i
i <- 3
i <- 3
(100*(i-1))+i
j <- 1
j <- 2
i <- 1
(100*(j-1))+i
j <- 3
(100*(j-1))+i
simParam <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Param.xlsx", sheetIndex = 1)
analyse <- data.frame(BaseT_Site = NA, xBar = NA, Diff = NA)
for (i in 1:nrow(simParam)){
for (j in 1:2) {
xxx <- calc_X(runSimulation(simParam[i,]))
analyse[(2*(i-1))+j, 1] <- sim
analyse[(2*(i-1))+j, 2] <- xxx
analyse[(2*(i-1))+j, 3] <- xxx - simParam$Actual
}
}
i <- 1
j <- 1
analyse <- data.frame(BaseT_Site = NA, xBar = NA, Diff = NA)
xxx <- calc_X(runSimulation(simParam[i,]))
analyse[(2*(i-1))+j, 1] <- sim
analyse[(2*(i-1))+j, 1] <- simParam$BaseT_Site[i]
analyse[(2*(i-1))+j, 2] <- xxx
analyse[(2*(i-1))+j, 3] <- xxx - simParam$Actual
analyse[(2*(i-1))+j, 3] <- xxx - simParam$Actual[i]
View(analyse)
simParam <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Param.xlsx", sheetIndex = 1)
analyse <- data.frame(BaseT_Site = NA, xBar = NA, Actual = NA, Diff = NA)
for (i in 1:nrow(simParam)){
for (j in 1:2) {
xxx <- calc_X(runSimulation(simParam[i,]))
analyse[(2*(i-1))+j, 1] <- simParam$BaseT_Site[i]
analyse[(2*(i-1))+j, 2] <- xxx
analyse[(2*(i-1))+j, 3] <- simParam$Actual[i]
analyse[(2*(i-1))+j, 4] <- xxx - simParam$Actual[i]
}
}
runSimulation <- function(param) {
durVector <- rep(NA, times = numSim)
for (i in 1:numSim) {
sim <- rpois(10000, param$recruitRate)
sim <- cumsum(sim)
durVector[i] <- which.max(sim >= param$RecruitGoal) - 1
}
durVector
}
simParam <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Param.xlsx", sheetIndex = 1)
analyse <- data.frame(BaseT_Site = NA, xBar = NA, Actual = NA, Diff = NA)
for (i in 1:nrow(simParam)){
for (j in 1:2) {
xxx <- calc_X(runSimulation(simParam[i,]))
analyse[(2*(i-1))+j, 1] <- simParam$BaseT_Site[i]
analyse[(2*(i-1))+j, 2] <- xxx
analyse[(2*(i-1))+j, 3] <- simParam$Actual[i]
analyse[(2*(i-1))+j, 4] <- xxx - simParam$Actual[i]
}
}
ggplot(analyse, aes(x = BaseT_Site, y = Diff, color = BaseT_Site)) + geom_boxplot() + labs(title = "Deviation from mean", y = "Absolute deviation from mean") + theme_classic()
analyse <- inner_join(analyse, siteDetails, by = "BaseT_Site")
View(analyse)
ggplot(analyse, aes(x = Location, y = Diff, color = Location)) + geom_boxplot() + labs(title = "Deviation from mean", y = "Absolute deviation from mean") + theme_classic()
for (i in 1:nrow(simParam)){
for (j in 1:100) {
xxx <- calc_X(runSimulation(simParam[i,]))
analyse[(2*(i-1))+j, 1] <- simParam$BaseT_Site[i]
analyse[(2*(i-1))+j, 2] <- xxx
analyse[(2*(i-1))+j, 3] <- simParam$Actual[i]
analyse[(2*(i-1))+j, 4] <- xxx - simParam$Actual[i]
}
}
analyse <- inner_join(analyse, siteDetails, by = "BaseT_Site")
ggplot(analyse, aes(x = Location, y = Diff, color = Location)) + geom_boxplot() + labs(title = "Deviation from mean", y = "Absolute deviation from mean") + theme_classic()
View(analyse)
simParam <- read.xlsx("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/Param.xlsx", sheetIndex = 1)
analyse <- data.frame(BaseT_Site = NA, xBar = NA, Actual = NA, Diff = NA)
for (i in 1:nrow(simParam)){
for (j in 1:100) {
xxx <- calc_X(runSimulation(simParam[i,]))
analyse[(100*(i-1))+j, 1] <- simParam$BaseT_Site[i]
analyse[(100*(i-1))+j, 2] <- xxx
analyse[(100*(i-1))+j, 3] <- simParam$Actual[i]
analyse[(100*(i-1))+j, 4] <- xxx - simParam$Actual[i]
}
}
analyse <- inner_join(analyse, siteDetails, by = "BaseT_Site")
ggplot(analyse, aes(x = Location, y = Diff, color = Location)) + geom_boxplot() + labs(title = "Deviation from mean", y = "Absolute deviation from mean") + theme_classic()
write.csv(analyse, "C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/6. Tool/Verification/almostThere.csv", row.names = FALSE)
ggplot(analyse, aes(x = Location, y = Diff, color = Location)) + geom_boxplot() + labs(title = "Deviation from mean", y = "Absolute deviation from mean") + theme_classic() + coord_cartesian(ylim = c(-1,1))
ggplot(analyse, aes(x = Location, y = Diff, color = Location)) + geom_boxplot() + labs(title = "Deviation from mean", y = "Absolute deviation from mean") + theme_classic() + coord_cartesian(ylim = c(-0.5,1))
shiny::runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
calc_X <- function(simVector) {
noSamp <- numSim/Samp
xbar <- rep(NA, times = noSamp)
for (i in 1:noSamp) {
lower <- (i-1) * Samp + 1
upper <- i * Samp
xbar[i] <- mean(simVector[lower:upper])
}
mean(xbar)
}
baseParam <- 15
simParam <- data.frame(RecruitGoal = c(1000), recruitRate = baseParam)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -90:90){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+91] <- calc_X(runSimulation(simParam))
}
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
testDF <- data.frame(test = rep("one", 181), values = x)
x <- data.frame(test = rep("15", 181), values = x)
testDF <- data.frame(test = rep("15", 181), values = x)
View(testDF)
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
testDF <- data.frame(test = rep("15", 181), values = x)
baseParam <- 5
simParam <- data.frame(RecruitGoal = c(1000), recruitRate = baseParam)
View(testDF)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -90:90){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+91] <- calc_X(runSimulation(simParam))
}
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
x <- data.frame(test = rep("5", 181), values = x)
y <- bind_rows(testDF, x)
library("dplyr", lib.loc="~/R/win-library/3.5")
y <- bind_rows(testDF, x)
View(y)
baseParam <- 1.5
simParam <- data.frame(RecruitGoal = c(1000), recruitRate = baseParam)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -90:90){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+91] <- calc_X(runSimulation(simParam))
}
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
x <- data.frame(test = rep("5", 181), values = x)
y <- bind_rows(testDF, x)
View(y)
baseParam <- 15
simParam <- data.frame(RecruitGoal = c(1000), recruitRate = baseParam)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -90:90){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+91] <- calc_X(runSimulation(simParam))
}
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
testDF <- data.frame(test = rep("15", 181), values = x)
baseParam <- 7
simParam <- data.frame(RecruitGoal = c(1000), recruitRate = baseParam)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -90:90){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+91] <- calc_X(runSimulation(simParam))
}
y <- 1
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
x <- data.frame(test = rep("7", 181), values = x)
y <- bind_rows(testDF, x)
baseParam <- 1.5
simParam <- data.frame(RecruitGoal = c(1000), recruitRate = baseParam)
rangeDF <- data.frame(Rate = -90:90, Diff = rep(NA, 181))
for (i in -90:90){
simParam$recruitRate <- baseParam + baseParam*i/100
rangeDF$Diff[i+91] <- calc_X(runSimulation(simParam))
}
x <- ((rangeDF$Diff[91] - rangeDF$Diff))
x <- data.frame(test = rep("1.5", 181), values = x)
y <- bind_rows(y, x)
View(y)
aaa <- rep(1:3, 3)
a
aaa
y$x <- rep(-90:90,3)
source('~/R/Model.R', echo=TRUE)
library(dplyr)
library(ggplot2)
library(plotly)
library(xlsx)
library(lubridate)
library(leaflet)
library(RColorBrewer)
library(rhandsontable)
ggplot(y, aes(x = x, y = values, colour = test)) + geom_point()
ggplot(y, aes(x = x, y = values, colour = test)) + geom_jitter()
plot_ly(y, x = ~x, y = ~values , color = ~test, type = "scatter", mode = "lines")
shiny::runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
shiny::runApp('R/R Playground/Playground/Dashboard/draftOnePM')
shiny::runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/Planning Tool/RecruitmentPlanningTool')
runApp('R/R Playground/Playground/Dashboard/Planning Tool/RecruitmentPlanningTool')
?install.packages
runGitHub("https://github.com/spiesruan/PlanningTool1/blob/master/app.R")
runGitHub("spiesruan/PlanningTool1")
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
a <- NULL
a
is.null(a)
!is.null(a)
shiny::runApp('R/R Playground/Playground/Dashboard/draftOnePM')
shiny::runApp('R/R Playground/Playground/Dashboard/Planning Tool/RecruitmentPlanningTool')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
baseData <- read.csv("C:/Users/Ruan-PC/Google Drive/1. Academics/Fourth Year/Skripsie/4. Project Mind/Data/testBase.csv")
View(baseData)
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
shiny::runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
runApp('R/R Playground/Playground/Dashboard/draftOnePM')
getwd()
getwd()
file.path()
?file.path
library("shiny")
runApp('Trial Recruitment Tool/1. Planning Tool')
getActiveDocumentContext()$path
library(rstudioapi)
getActiveDocumentContext()$path
getActiveDocumentContext()$path
getActiveDocumentContext()$path
getActiveDocumentContext()$path
runApp('Trial Recruitment Tool/PlanningTool')
# Libraries  ---------------------------------
library(shiny)
runApp('Trial Recruitment Tool/1. Planning Tool')
body <- dashboardBody(
tabItems(
tabItem(tabName = "plan",
h1("Planning"),
planPage
),
tabItem(tabName = "info",
h1("Tutorials"),
HTML('<iframe width="560" height="315" src="https://www.youtube.com/embed/videoseries?list=PLEESpC-GOSh9_r61fo2wbkXvULTIETWRk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
)
)
shiny::runApp('Trial Recruitment Tool/1. Planning Tool')
